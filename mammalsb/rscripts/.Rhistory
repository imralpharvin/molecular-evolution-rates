# Get the trait specific datatable.
dfLatitudeMedian <- setDT(GetTraitSpecificDataBIN(dfLatitudeSpecies, 14))
dfLatitudeRange <- setDT(GetTraitSpecificDataBIN(dfLatitudeSpecies, 15))
# Datatable reorganization
setnames(dfLatitudeMedian, "species_label", "species_name")
setnames(dfLatitudeRange, "species_label", "species_name")
dfFiltered <- dfFiltered[, .(bin_uri, filtered_bin_size, recordID, order_name = order_label, family_name = family_label, genus_name = genus_label,
species_name = species_label, nucleotides)]
dfLatitudeMedian <- dfLatitudeMedian[, !c(1,3)]
dfLatitudeRange <- dfLatitudeRange[, !c(1,3)]
#### TRAIT: PANTHERIA XLSX ####
# Read excel sheet data
rawMammalData <- read_excel("Pantheria.xlsx")
# Select all columns
selectedTraits<- c("MSW05_Order","MSW05_Family","MSW05_Genus","MSW05_Binomial", "5-1_AdultBodyMass_g" ,"8-1_AdultForearmLen_mm", "13-1_AdultHeadBodyLen_mm", "2-1_AgeatEyeOpening_d" ,"3-1_AgeatFirstBirth_d", "18-1_BasalMetRate_mLO2hr" ,"5-2_BasalMetRateMass_g" ,"7-1_DispersalAge_d" ,"9-1_GestationLen_d", "22-1_HomeRange_km2"
,"22-2_HomeRange_Indiv_km2","14-1_InterbirthInterval_d", "15-1_LitterSize","16-1_LittersPerYear","17-1_MaxLongevity_m", "5-3_NeonateBodyMass_g"       , "13-2_NeonateHeadBodyLen_mm", "21-1_PopulationDensity_n/km2", "10-1_PopulationGrpSize", "23-1_SexualMaturityAge_d", "10-2_SocialGrpSize","24-1_TeatNumber"
, "25-1_WeaningAge_d" , "5-4_WeaningBodyMass_g" , "13-3_WeaningHeadBodyLen_mm","26-1_GR_Area_km2" , "26-2_GR_MaxLat_dd" ,"26-3_GR_MinLat_dd", "26-4_GR_MidRangeLat_dd","26-5_GR_MaxLong_dd"
, "26-6_GR_MinLong_dd", "26-7_GR_MidRangeLong_dd","27-1_HuPopDen_Min_n/km2" , "27-2_HuPopDen_Mean_n/km2", "27-3_HuPopDen_5p_n/km2", "27-4_HuPopDen_Change"
, "28-1_Precip_Mean_mm" , "28-2_Temp_Mean_01degC" ,"30-1_AET_Mean_mm","30-2_PET_Mean_mm","1-1_ActivityCycle",  "6-1_DietBreadth", "12-1_HabitatBreadth", "12-2_Terrestriality", "6-2_TrophicLevel")
# Filter the original data using the selectedTraits vector as the subset
traitData <- rawMammalData[selectedTraits]
# Rename columns
colnames(traitData) <- c("order", "family", "genus", "species_name", "body_mass", "forearm_length", "headbody_length", "eyeopening_age", "firstbirth_age", "bmr_rate", "bmr_mass", "dispersal_age", "gestation_length", "home_range", "home_range_indiv", "interbirth_interval", "litter_size", "litters_pyear", "max_longevity", "neonate_bodymass", "neonate_headbodylength", "pop_density", "pop_grpsize", "sexualmaturity_age", "social_grpsize", "teatnumber", "weaning_age", "weaning_bodymass", "weaning_bodylength", "GR_area", "GR_maxlat", "GR_minlat", "GR_midrangelat", "GR_maxlong", "GR_minlong", "GR_midrangelong", "hupopden_min", "hupopden_mean", "hupopden_5p", "hupopden_change", "precip_mean", "temp_mean", "AET_mean", "PET_mean", "activity_cycle", "diet_breadth", "habitat_breadth", "terrestriality", "trophic_level")
# Changing -999 values to NA
traitData[traitData == -999] <- NA
# Converting to data table
traitData <- as.data.table(traitData)
traitData <- traitData[,!c(1,2,3)]
##### Placental mammal data #####
# Read mammal data
placentalMammalData <- read_excel("placental.xlsx")
# Remove columns that are not needed for analysis
placentalMammalData$refs <- NULL
# Rename columns
colnames(placentalMammalData) <- c("order", "family", "genus", "species_name", "body_mass", "gestation_length", "neonate_bodymass", "weaning_age", "weaning_bodymass", "firstbirth_age", "max_longevity", "litter_size", "litters_pyear");
# Changing -999 values to NA
placentalMammalData[placentalMammalData == -999] <- NA
# Converting to data table
placentalMammalData <- as.data.table(placentalMammalData)
# Setting species name
placentalMammalData <- unite(placentalMammalData, "species", c("genus","species_name"), sep = " ", remove = FALSE)
# Converting months to days
placentalMammalData <- placentalMammalData[, gestation_length := gestation_length*30]
placentalMammalData <- placentalMammalData[, weaning_age := weaning_age *30]
placentalMammalData <- placentalMammalData[, firstbirth_age := firstbirth_age *30]
mergedSpecies <- merge(dfFiltered, traitData, by = "species_name")
# Single row per species
dfFilteredSingle <- dfFiltered[!duplicated(species_name)][, .(bin_uri, species_name, filtered_bin_size)]
#
dfTraits <- Reduce(function(...) merge(..., all = T, by = "species_name"), list(dfFilteredSingle, dfLatitudeMedian,dfLatitudeRange, traitData , placentalMammalData))
View(dfTraits)
load("C:/Users/RalphArvin/Desktop/work-s2018/mammalsb/June 22/Sec 1 June 22.RData")
library(data.table)
# For importing xslx data to data.frame
#install.packages("readxl")
library("readxl")
source("GetTraitSpecificDataBIN.R")
source("GetTraitSpecificData.R")
source("GetTraitInfo.R")
#### TRAIT: MEDIAN LATITUDE ####
# Filtering for presence of a latitude value.
dfLatitudeSpecies <- dfFiltered[grep("[0-9]", lat)]
# Convert the latitude (lat) column to number instead of character type
dfLatitudeSpecies[, lat_num := as.numeric(lat)]
# Conversion to absolute values before median latitude values are calculated.
dfLatitudeSpecies[, abs_lat_num := abs(lat_num)]
# Determine a median latitude for each BIN using absolute values.
dfLatitudeSpecies[, median_lat := median(abs_lat_num), keyby = bin_uri]
#### TRAIT: LATITUDE RANGE ####
# Get maximum latitude for each bin
dfLatitudeSpecies[, max_lat := max(lat_num), keyby = bin_uri]
# Get minimum latitude for each bin
dfLatitudeSpecies[, min_lat := min(lat_num), keyby = bin_uri]
# Subtract maximum latitude and minimum latitude
dfLatitudeSpecies[, range_lat := max_lat - min_lat, keyby = bin_uri]
# Datatable organization
dfLatitudeSpecies <- dfLatitudeSpecies[, !c(14,15,17,18)]
# Get the trait specific datatable.
dfLatitudeMedian <- setDT(GetTraitSpecificDataBIN(dfLatitudeSpecies, 14))
dfLatitudeRange <- setDT(GetTraitSpecificDataBIN(dfLatitudeSpecies, 15))
# Datatable reorganization
setnames(dfLatitudeMedian, "species_label", "species_name")
setnames(dfLatitudeRange, "species_label", "species_name")
dfFiltered <- dfFiltered[, .(bin_uri, filtered_bin_size, recordID, order_name = order_label, family_name = family_label, genus_name = genus_label,
species_name = species_label, nucleotides)]
dfLatitudeMedian <- dfLatitudeMedian[, !c(1,3)]
dfLatitudeRange <- dfLatitudeRange[, !c(1,3)]
#### TRAIT: PANTHERIA XLSX ####
# Read excel sheet data
rawMammalData <- read_excel("Pantheria.xlsx")
# Select all columns
selectedTraits<- c("MSW05_Order","MSW05_Family","MSW05_Genus","MSW05_Binomial", "5-1_AdultBodyMass_g" ,"8-1_AdultForearmLen_mm", "13-1_AdultHeadBodyLen_mm", "2-1_AgeatEyeOpening_d" ,"3-1_AgeatFirstBirth_d", "18-1_BasalMetRate_mLO2hr" ,"5-2_BasalMetRateMass_g" ,"7-1_DispersalAge_d" ,"9-1_GestationLen_d", "22-1_HomeRange_km2"
,"22-2_HomeRange_Indiv_km2","14-1_InterbirthInterval_d", "15-1_LitterSize","16-1_LittersPerYear","17-1_MaxLongevity_m", "5-3_NeonateBodyMass_g"       , "13-2_NeonateHeadBodyLen_mm", "21-1_PopulationDensity_n/km2", "10-1_PopulationGrpSize", "23-1_SexualMaturityAge_d", "10-2_SocialGrpSize","24-1_TeatNumber"
, "25-1_WeaningAge_d" , "5-4_WeaningBodyMass_g" , "13-3_WeaningHeadBodyLen_mm","26-1_GR_Area_km2" , "26-2_GR_MaxLat_dd" ,"26-3_GR_MinLat_dd", "26-4_GR_MidRangeLat_dd","26-5_GR_MaxLong_dd"
, "26-6_GR_MinLong_dd", "26-7_GR_MidRangeLong_dd","27-1_HuPopDen_Min_n/km2" , "27-2_HuPopDen_Mean_n/km2", "27-3_HuPopDen_5p_n/km2", "27-4_HuPopDen_Change"
, "28-1_Precip_Mean_mm" , "28-2_Temp_Mean_01degC" ,"30-1_AET_Mean_mm","30-2_PET_Mean_mm","1-1_ActivityCycle",  "6-1_DietBreadth", "12-1_HabitatBreadth", "12-2_Terrestriality", "6-2_TrophicLevel")
# Filter the original data using the selectedTraits vector as the subset
traitData <- rawMammalData[selectedTraits]
# Rename columns
colnames(traitData) <- c("order", "family", "genus", "species_name", "body_mass", "forearm_length", "headbody_length", "eyeopening_age", "firstbirth_age", "bmr_rate", "bmr_mass", "dispersal_age", "gestation_length", "home_range", "home_range_indiv", "interbirth_interval", "litter_size", "litters_pyear", "max_longevity", "neonate_bodymass", "neonate_headbodylength", "pop_density", "pop_grpsize", "sexualmaturity_age", "social_grpsize", "teatnumber", "weaning_age", "weaning_bodymass", "weaning_bodylength", "GR_area", "GR_maxlat", "GR_minlat", "GR_midrangelat", "GR_maxlong", "GR_minlong", "GR_midrangelong", "hupopden_min", "hupopden_mean", "hupopden_5p", "hupopden_change", "precip_mean", "temp_mean", "AET_mean", "PET_mean", "activity_cycle", "diet_breadth", "habitat_breadth", "terrestriality", "trophic_level")
# Changing -999 values to NA
traitData[traitData == -999] <- NA
# Converting to data table
traitData <- as.data.table(traitData)
traitData <- traitData[,!c(1,2,3)]
##### Placental mammal data #####
# Read mammal data
placentalMammalData <- read_excel("placental.xlsx")
# Remove columns that are not needed for analysis
placentalMammalData$refs <- NULL
# Rename columns
colnames(placentalMammalData) <- c("order", "family", "genus", "species", "body_mass", "gestation_length", "neonate_bodymass", "weaning_age", "weaning_bodymass", "firstbirth_age", "max_longevity", "litter_size", "litters_pyear");
# Changing -999 values to NA
placentalMammalData[placentalMammalData == -999] <- NA
# Converting to data table
placentalMammalData <- as.data.table(placentalMammalData)
# Setting species name
placentalMammalData <- unite(placentalMammalData, "species_name", c("genus","species"), sep = " ", remove = FALSE)
# Converting months to days
placentalMammalData <- placentalMammalData[, gestation_length := gestation_length*30]
placentalMammalData <- placentalMammalData[, weaning_age := weaning_age *30]
placentalMammalData <- placentalMammalData[, firstbirth_age := firstbirth_age *30]
# Merge Species name
mergedSpecies <- merge(dfFiltered, traitData, by = "species_name")
# Single row per species
dfFilteredSingle <- dfFiltered[!duplicated(species_name)][, .(bin_uri, species_name, filtered_bin_size)]
#
dfTraits <- Reduce(function(...) merge(..., all = T, by = "species_name"), list(dfFilteredSingle, dfLatitudeMedian,dfLatitudeRange, traitData , placentalMammalData))
View(dfTraits)
load("C:/Users/RalphArvin/Desktop/work-s2018/mammalsb/June 22/Sec 1 June 22.RData")
setwd("C:/Users/RalphArvin/Desktop/work-s2018/mammalsb/rscripts")
##### SECTION 2: TRAIT ASSIGNMENT #####
# This section is designed to assign trait data from BOLD and Pantheria and match it to BOLD sequence data.
#For data manipulation:
#install.packages("data.table")
library(data.table)
# For importing xslx data to data.frame
#install.packages("readxl")
library("readxl")
source("GetTraitSpecificDataBIN.R")
source("GetTraitSpecificData.R")
source("GetTraitInfo.R")
#### TRAIT: MEDIAN LATITUDE ####
# Filtering for presence of a latitude value.
dfLatitudeSpecies <- dfFiltered[grep("[0-9]", lat)]
# Convert the latitude (lat) column to number instead of character type
dfLatitudeSpecies[, lat_num := as.numeric(lat)]
# Conversion to absolute values before median latitude values are calculated.
dfLatitudeSpecies[, abs_lat_num := abs(lat_num)]
# Determine a median latitude for each BIN using absolute values.
dfLatitudeSpecies[, median_lat := median(abs_lat_num), keyby = bin_uri]
#### TRAIT: LATITUDE RANGE ####
# Get maximum latitude for each bin
dfLatitudeSpecies[, max_lat := max(lat_num), keyby = bin_uri]
# Get minimum latitude for each bin
dfLatitudeSpecies[, min_lat := min(lat_num), keyby = bin_uri]
# Subtract maximum latitude and minimum latitude
dfLatitudeSpecies[, range_lat := max_lat - min_lat, keyby = bin_uri]
# Datatable organization
dfLatitudeSpecies <- dfLatitudeSpecies[, !c(14,15,17,18)]
# Get the trait specific datatable.
dfLatitudeMedian <- setDT(GetTraitSpecificDataBIN(dfLatitudeSpecies, 14))
dfLatitudeRange <- setDT(GetTraitSpecificDataBIN(dfLatitudeSpecies, 15))
# Datatable reorganization
setnames(dfLatitudeMedian, "species_label", "species_name")
setnames(dfLatitudeRange, "species_label", "species_name")
dfFiltered <- dfFiltered[, .(bin_uri, filtered_bin_size, recordID, order_name = order_label, family_name = family_label, genus_name = genus_label,
species_name = species_label, nucleotides)]
dfLatitudeMedian <- dfLatitudeMedian[, !c(1,3)]
dfLatitudeRange <- dfLatitudeRange[, !c(1,3)]
#### TRAIT: PANTHERIA XLSX ####
# Read excel sheet data
rawMammalData <- read_excel("Pantheria.xlsx")
# Select all columns
selectedTraits<- c("MSW05_Order","MSW05_Family","MSW05_Genus","MSW05_Binomial", "5-1_AdultBodyMass_g" ,"8-1_AdultForearmLen_mm", "13-1_AdultHeadBodyLen_mm", "2-1_AgeatEyeOpening_d" ,"3-1_AgeatFirstBirth_d", "18-1_BasalMetRate_mLO2hr" ,"5-2_BasalMetRateMass_g" ,"7-1_DispersalAge_d" ,"9-1_GestationLen_d", "22-1_HomeRange_km2"
,"22-2_HomeRange_Indiv_km2","14-1_InterbirthInterval_d", "15-1_LitterSize","16-1_LittersPerYear","17-1_MaxLongevity_m", "5-3_NeonateBodyMass_g"       , "13-2_NeonateHeadBodyLen_mm", "21-1_PopulationDensity_n/km2", "10-1_PopulationGrpSize", "23-1_SexualMaturityAge_d", "10-2_SocialGrpSize","24-1_TeatNumber"
, "25-1_WeaningAge_d" , "5-4_WeaningBodyMass_g" , "13-3_WeaningHeadBodyLen_mm","26-1_GR_Area_km2" , "26-2_GR_MaxLat_dd" ,"26-3_GR_MinLat_dd", "26-4_GR_MidRangeLat_dd","26-5_GR_MaxLong_dd"
, "26-6_GR_MinLong_dd", "26-7_GR_MidRangeLong_dd","27-1_HuPopDen_Min_n/km2" , "27-2_HuPopDen_Mean_n/km2", "27-3_HuPopDen_5p_n/km2", "27-4_HuPopDen_Change"
, "28-1_Precip_Mean_mm" , "28-2_Temp_Mean_01degC" ,"30-1_AET_Mean_mm","30-2_PET_Mean_mm","1-1_ActivityCycle",  "6-1_DietBreadth", "12-1_HabitatBreadth", "12-2_Terrestriality", "6-2_TrophicLevel")
# Filter the original data using the selectedTraits vector as the subset
traitData <- rawMammalData[selectedTraits]
# Rename columns
colnames(traitData) <- c("order", "family", "genus", "species_name", "body_mass", "forearm_length", "headbody_length", "eyeopening_age", "firstbirth_age", "bmr_rate", "bmr_mass", "dispersal_age", "gestation_length", "home_range", "home_range_indiv", "interbirth_interval", "litter_size", "litters_pyear", "max_longevity", "neonate_bodymass", "neonate_headbodylength", "pop_density", "pop_grpsize", "sexualmaturity_age", "social_grpsize", "teatnumber", "weaning_age", "weaning_bodymass", "weaning_bodylength", "GR_area", "GR_maxlat", "GR_minlat", "GR_midrangelat", "GR_maxlong", "GR_minlong", "GR_midrangelong", "hupopden_min", "hupopden_mean", "hupopden_5p", "hupopden_change", "precip_mean", "temp_mean", "AET_mean", "PET_mean", "activity_cycle", "diet_breadth", "habitat_breadth", "terrestriality", "trophic_level")
# Changing -999 values to NA
traitData[traitData == -999] <- NA
# Converting to data table
traitData <- as.data.table(traitData)
traitData <- traitData[,!c(1,2,3)]
##### Placental mammal data #####
# Read mammal data
placentalMammalData <- read_excel("placental.xlsx")
# Remove columns that are not needed for analysis
placentalMammalData$refs <- NULL
# Rename columns
colnames(placentalMammalData) <- c("order", "family", "genus", "species", "body_mass", "gestation_length", "neonate_bodymass", "weaning_age", "weaning_bodymass", "firstbirth_age", "max_longevity", "litter_size", "litters_pyear");
# Changing -999 values to NA
placentalMammalData[placentalMammalData == -999] <- NA
# Converting to data table
placentalMammalData <- as.data.table(placentalMammalData)
# Setting species name
placentalMammalData <- unite(placentalMammalData, "species_name", c("genus","species"), sep = " ", remove = FALSE)
# Converting months to days
placentalMammalData <- placentalMammalData[, gestation_length := gestation_length*30]
placentalMammalData <- placentalMammalData[, weaning_age := weaning_age *30]
placentalMammalData <- placentalMammalData[, firstbirth_age := firstbirth_age *30]
##### Amniote mammal data #####
# Read mammal data
amnioteMammalData <- read.csv("Amniote.csv")
# Filter mammals
amnioteMammalData <- filter(amnioteMammalData, class == "Mammalia")
# Subset columns needed for analysis
amnioteMammalData<- amnioteMammalData[, c(1:5, 9:16, 22, 29, 32, 36)]
# Setting null valuescol
amnioteMammalData[amnioteMammalData == -999] <- NA
# Converting to data table
amnioteMammalData <- as.data.table(amnioteMammalData)
# Setting species name
amnioteMammalData <- unite(amnioteMammalData, "species_name", c("genus","species"), sep = " ", remove = FALSE)
# Rename columns
amnioteMammalData <- rename(amnioteMammalData,  litter_size = litter_or_clutch_size_n, litters_pyear = litters_or_clutches_per_y, body_mass = adult_body_mass_g, max_longevity = maximum_longevity_y, gestation_length = gestation_d, weaning_age = weaning_d, neonate_bodymass = birth_or_hatching_weight_g, weaning_bodymass = weaning_weight_g, interbirth_interval = inter_litter_or_interbirth_interval_y, adult_svl_length = adult_svl_cm, neonate_svl_length = birth_or_hatching_svl_cm, maturity_length = no_sex_maturity_d)
# Convert years to days
amnioteMammalData <- amnioteMammalData[, interbirth_interval := interbirth_interval *365]
# Convert years to months
amnioteMammalData <- amnioteMammalData[, max_longevity := max_longevity *12]
##### Anage  mammal data #####
# Filter the original data using the selectedTraits vector as the subset
# Read mammal data
anageMammalData <- read_excel("anage.xlsx")
# Subset columns needed for analysis
anageMammalData<- anageMammalData[, c(4:8, 12, 14:17, 19:21, 26:30)]
# Filter mammals
anageMammalData <- filter(anageMammalData, Class == "Mammalia")
# Rename columns
anageMammalData <- rename(anageMammalData, class = Class, order = Order, family = Family, genus = Genus, species = Species, gestation_length = "Gestation/Incubation (days)", litter_size = "Litter/Clutch size", litters_pyear = "Litters/Clutches per year", interbirth_length =  "Inter-litter/Interbirth interval", neonate_bodymass = "Birth weight (g)" ,  body_mass = "Adult weight (g)", growth_rate = "Growth rate (1/days)", max_longevity = "Maximum longevity (yrs)", imr_pyear = "IMR (per yr)", mrdt = "MRDT (yrs)", metabolic_rate = "Metabolic rate (W)", body_mass = "Body mass (g)", temp_mean = "Temperature (K)")
# Setting species name
anageMammalData <- unite(anageMammalData, "species_name", c("genus","species"), sep = " ", remove = FALSE)
# Converting to data table
anageMammalData <- as.data.table(anageMammalData)
# Convert years to months
anageMammalData <- anageMammalData[, max_longevity := max_longevity *12]
##### Merging all data ####
mergedSpecies <- merge(dfFiltered, traitData, by = "species_name")
# Single row per species
dfFilteredSingle <- dfFiltered[!duplicated(species_name)][, .(bin_uri, species_name, filtered_bin_size)]
#
dfTraits <- Reduce(function(...) merge(..., all = T, by = "species_name"), list(dfFilteredSingle, dfLatitudeMedian,dfLatitudeRange, traitData , placentalMammalData, amnioteMammalData, anageMammalData))
#
View(dfTraits)
View(placentalMammalData)
load("C:/Users/RalphArvin/Desktop/work-s2018/mammalsb/June 22/Sec 1 June 22.RData")
##### SECTION 2: TRAIT ASSIGNMENT #####
# This section is designed to assign trait data from BOLD and Pantheria and match it to BOLD sequence data.
#For data manipulation:
#install.packages("data.table")
library(data.table)
# For importing xslx data to data.frame
#install.packages("readxl")
library("readxl")
source("GetTraitSpecificDataBIN.R")
source("GetTraitSpecificData.R")
source("GetTraitInfo.R")
#### TRAIT: MEDIAN LATITUDE ####
# Filtering for presence of a latitude value.
dfLatitudeSpecies <- dfFiltered[grep("[0-9]", lat)]
# Convert the latitude (lat) column to number instead of character type
dfLatitudeSpecies[, lat_num := as.numeric(lat)]
# Conversion to absolute values before median latitude values are calculated.
dfLatitudeSpecies[, abs_lat_num := abs(lat_num)]
# Determine a median latitude for each BIN using absolute values.
dfLatitudeSpecies[, median_lat := median(abs_lat_num), keyby = bin_uri]
#### TRAIT: LATITUDE RANGE ####
# Get maximum latitude for each bin
dfLatitudeSpecies[, max_lat := max(lat_num), keyby = bin_uri]
# Get minimum latitude for each bin
dfLatitudeSpecies[, min_lat := min(lat_num), keyby = bin_uri]
# Subtract maximum latitude and minimum latitude
dfLatitudeSpecies[, range_lat := max_lat - min_lat, keyby = bin_uri]
# Datatable organization
dfLatitudeSpecies <- dfLatitudeSpecies[, !c(14,15,17,18)]
# Get the trait specific datatable.
dfLatitudeMedian <- setDT(GetTraitSpecificDataBIN(dfLatitudeSpecies, 14))
dfLatitudeRange <- setDT(GetTraitSpecificDataBIN(dfLatitudeSpecies, 15))
# Datatable reorganization
setnames(dfLatitudeMedian, "species_label", "species_name")
setnames(dfLatitudeRange, "species_label", "species_name")
dfFiltered <- dfFiltered[, .(bin_uri, filtered_bin_size, recordID, order_name = order_label, family_name = family_label, genus_name = genus_label,
species_name = species_label, nucleotides)]
dfLatitudeMedian <- dfLatitudeMedian[, !c(1,3)]
dfLatitudeRange <- dfLatitudeRange[, !c(1,3)]
#### TRAIT: PANTHERIA XLSX ####
# Read excel sheet data
rawMammalData <- read_excel("Pantheria.xlsx")
# Select all columns
selectedTraits<- c("MSW05_Order","MSW05_Family","MSW05_Genus","MSW05_Binomial", "5-1_AdultBodyMass_g" ,"8-1_AdultForearmLen_mm", "13-1_AdultHeadBodyLen_mm", "2-1_AgeatEyeOpening_d" ,"3-1_AgeatFirstBirth_d", "18-1_BasalMetRate_mLO2hr" ,"5-2_BasalMetRateMass_g" ,"7-1_DispersalAge_d" ,"9-1_GestationLen_d", "22-1_HomeRange_km2"
,"22-2_HomeRange_Indiv_km2","14-1_InterbirthInterval_d", "15-1_LitterSize","16-1_LittersPerYear","17-1_MaxLongevity_m", "5-3_NeonateBodyMass_g"       , "13-2_NeonateHeadBodyLen_mm", "21-1_PopulationDensity_n/km2", "10-1_PopulationGrpSize", "23-1_SexualMaturityAge_d", "10-2_SocialGrpSize","24-1_TeatNumber"
, "25-1_WeaningAge_d" , "5-4_WeaningBodyMass_g" , "13-3_WeaningHeadBodyLen_mm","26-1_GR_Area_km2" , "26-2_GR_MaxLat_dd" ,"26-3_GR_MinLat_dd", "26-4_GR_MidRangeLat_dd","26-5_GR_MaxLong_dd"
, "26-6_GR_MinLong_dd", "26-7_GR_MidRangeLong_dd","27-1_HuPopDen_Min_n/km2" , "27-2_HuPopDen_Mean_n/km2", "27-3_HuPopDen_5p_n/km2", "27-4_HuPopDen_Change"
, "28-1_Precip_Mean_mm" , "28-2_Temp_Mean_01degC" ,"30-1_AET_Mean_mm","30-2_PET_Mean_mm","1-1_ActivityCycle",  "6-1_DietBreadth", "12-1_HabitatBreadth", "12-2_Terrestriality", "6-2_TrophicLevel")
# Filter the original data using the selectedTraits vector as the subset
traitData <- rawMammalData[selectedTraits]
# Rename columns
colnames(traitData) <- c("order", "family", "genus", "species_name", "body_mass", "forearm_length", "headbody_length", "eyeopening_age", "firstbirth_age", "bmr_rate", "bmr_mass", "dispersal_age", "gestation_length", "home_range", "home_range_indiv", "interbirth_interval", "litter_size", "litters_pyear", "max_longevity", "neonate_bodymass", "neonate_headbodylength", "pop_density", "pop_grpsize", "sexualmaturity_age", "social_grpsize", "teatnumber", "weaning_age", "weaning_bodymass", "weaning_bodylength", "GR_area", "GR_maxlat", "GR_minlat", "GR_midrangelat", "GR_maxlong", "GR_minlong", "GR_midrangelong", "hupopden_min", "hupopden_mean", "hupopden_5p", "hupopden_change", "precip_mean", "temp_mean", "AET_mean", "PET_mean", "activity_cycle", "diet_breadth", "habitat_breadth", "terrestriality", "trophic_level")
# Changing -999 values to NA
traitData[traitData == -999] <- NA
# Converting to data table
traitData <- as.data.table(traitData)
traitData <- traitData[,!c(1,2,3)]
##### Placental mammal data #####
# Read mammal data
placentalMammalData <- read_excel("placental.xlsx")
# Remove columns that are not needed for analysis
placentalMammalData$refs <- NULL
# Rename columns
colnames(placentalMammalData) <- c("order", "family", "genus", "species", "body_mass", "gestation_length", "neonate_bodymass", "weaning_age", "weaning_bodymass", "firstbirth_age", "max_longevity", "litter_size", "litters_pyear");
# Changing -999 values to NA
placentalMammalData[placentalMammalData == -999] <- NA
# Converting to data table
placentalMammalData <- as.data.table(placentalMammalData)
# Setting species name
placentalMammalData <- unite(placentalMammalData, "species_name", c("genus","species"), sep = " ", remove = FALSE)
# Converting months to days
placentalMammalData <- placentalMammalData[, gestation_length := gestation_length*30]
placentalMammalData <- placentalMammalData[, weaning_age := weaning_age *30]
placentalMammalData <- placentalMammalData[, firstbirth_age := firstbirth_age *30]
# Data table reorganization
placentalMammalData <- placentalMammalData[, !c(1,2,4,5)]
##### Amniote mammal data #####
# Read mammal data
amnioteMammalData <- read.csv("Amniote.csv")
# Filter mammals
amnioteMammalData <- filter(amnioteMammalData, class == "Mammalia")
# Subset columns needed for analysis
amnioteMammalData<- amnioteMammalData[, c(1:5, 9:16, 22, 29, 32, 36)]
# Setting null valuescol
amnioteMammalData[amnioteMammalData == -999] <- NA
# Converting to data table
amnioteMammalData <- as.data.table(amnioteMammalData)
# Setting species name
amnioteMammalData <- unite(amnioteMammalData, "species_name", c("genus","species"), sep = " ", remove = FALSE)
# Rename columns
amnioteMammalData <- rename(amnioteMammalData,  litter_size = litter_or_clutch_size_n, litters_pyear = litters_or_clutches_per_y, body_mass = adult_body_mass_g, max_longevity = maximum_longevity_y, gestation_length = gestation_d, weaning_age = weaning_d, neonate_bodymass = birth_or_hatching_weight_g, weaning_bodymass = weaning_weight_g, interbirth_interval = inter_litter_or_interbirth_interval_y, adult_svl_length = adult_svl_cm, neonate_svl_length = birth_or_hatching_svl_cm, maturity_length = no_sex_maturity_d)
# Convert years to days
amnioteMammalData <- amnioteMammalData[, interbirth_interval := interbirth_interval *365]
# Convert years to months
amnioteMammalData <- amnioteMammalData[, max_longevity := max_longevity *12]
# Data table reorganization
amnioteMammalData <- amnioteMammalData[, !c(1,2,3,5,6)]
##### Anage  mammal data #####
# Filter the original data using the selectedTraits vector as the subset
# Read mammal data
anageMammalData <- read_excel("anage.xlsx")
# Subset columns needed for analysis
anageMammalData<- anageMammalData[, c(4:8, 12, 14:17, 19:21, 26:30)]
# Filter mammals
anageMammalData <- filter(anageMammalData, Class == "Mammalia")
# Rename columns
anageMammalData <- rename(anageMammalData, class = Class, order = Order, family = Family, genus = Genus, species = Species, gestation_length = "Gestation/Incubation (days)", litter_size = "Litter/Clutch size", litters_pyear = "Litters/Clutches per year", interbirth_length =  "Inter-litter/Interbirth interval", neonate_bodymass = "Birth weight (g)" ,  body_mass = "Adult weight (g)", growth_rate = "Growth rate (1/days)", max_longevity = "Maximum longevity (yrs)", imr_pyear = "IMR (per yr)", mrdt = "MRDT (yrs)", metabolic_rate = "Metabolic rate (W)", body_mass = "Body mass (g)", temp_mean = "Temperature (K)")
# Setting species name
anageMammalData <- unite(anageMammalData, "species_name", c("genus","species"), sep = " ", remove = FALSE)
# Converting to data table
anageMammalData <- as.data.table(anageMammalData)
# Convert years to months
anageMammalData <- anageMammalData[, max_longevity := max_longevity *12]
# Data table reorganization
anageMammalData <- anageMammalData[, !c(1,2,3,5,6)]
##### Merging all data ####
mergedSpecies <- merge(dfFiltered, traitData, by = "species_name")
# Single row per species
dfFilteredSingle <- dfFiltered[!duplicated(species_name)][, .(bin_uri, species_name, filtered_bin_size)]
#
dfTraits <- Reduce(function(...) merge(..., all = T, by = "species_name"), list(dfFilteredSingle, dfLatitudeMedian,dfLatitudeRange, traitData , placentalMammalData, amnioteMammalData, anageMammalData))
#
View(dfTraits)
load("C:/Users/RalphArvin/Desktop/work-s2018/mammalsb/June 22/Sec 1 June 22.RData")
#For data manipulation:
#install.packages("data.table")
library(data.table)
# For importing xslx data to data.frame
#install.packages("readxl")
library("readxl")
source("GetTraitSpecificDataBIN.R")
source("GetTraitSpecificData.R")
source("GetTraitInfo.R")
#### TRAIT: MEDIAN LATITUDE ####
# Filtering for presence of a latitude value.
dfLatitudeSpecies <- dfFiltered[grep("[0-9]", lat)]
# Convert the latitude (lat) column to number instead of character type
dfLatitudeSpecies[, lat_num := as.numeric(lat)]
# Conversion to absolute values before median latitude values are calculated.
dfLatitudeSpecies[, abs_lat_num := abs(lat_num)]
# Determine a median latitude for each BIN using absolute values.
dfLatitudeSpecies[, median_lat := median(abs_lat_num), keyby = bin_uri]
#### TRAIT: LATITUDE RANGE ####
# Get maximum latitude for each bin
dfLatitudeSpecies[, max_lat := max(lat_num), keyby = bin_uri]
# Get minimum latitude for each bin
dfLatitudeSpecies[, min_lat := min(lat_num), keyby = bin_uri]
# Subtract maximum latitude and minimum latitude
dfLatitudeSpecies[, range_lat := max_lat - min_lat, keyby = bin_uri]
# Datatable organization
dfLatitudeSpecies <- dfLatitudeSpecies[, !c(14,15,17,18)]
# Get the trait specific datatable.
dfLatitudeMedian <- setDT(GetTraitSpecificDataBIN(dfLatitudeSpecies, 14))
dfLatitudeRange <- setDT(GetTraitSpecificDataBIN(dfLatitudeSpecies, 15))
# Datatable reorganization
setnames(dfLatitudeMedian, "species_label", "species_name")
setnames(dfLatitudeRange, "species_label", "species_name")
dfFiltered <- dfFiltered[, .(bin_uri, filtered_bin_size, recordID, order_name = order_label, family_name = family_label, genus_name = genus_label,
species_name = species_label, nucleotides)]
dfLatitudeMedian <- dfLatitudeMedian[, !c(1,3)]
dfLatitudeRange <- dfLatitudeRange[, !c(1,3)]
#### TRAIT: PANTHERIA XLSX ####
# Read excel sheet data
rawMammalData <- read_excel("Pantheria.xlsx")
# Select all columns
selectedTraits<- c("MSW05_Order","MSW05_Family","MSW05_Genus","MSW05_Binomial", "5-1_AdultBodyMass_g" ,"8-1_AdultForearmLen_mm", "13-1_AdultHeadBodyLen_mm", "2-1_AgeatEyeOpening_d" ,"3-1_AgeatFirstBirth_d", "18-1_BasalMetRate_mLO2hr" ,"5-2_BasalMetRateMass_g" ,"7-1_DispersalAge_d" ,"9-1_GestationLen_d", "22-1_HomeRange_km2"
,"22-2_HomeRange_Indiv_km2","14-1_InterbirthInterval_d", "15-1_LitterSize","16-1_LittersPerYear","17-1_MaxLongevity_m", "5-3_NeonateBodyMass_g"       , "13-2_NeonateHeadBodyLen_mm", "21-1_PopulationDensity_n/km2", "10-1_PopulationGrpSize", "23-1_SexualMaturityAge_d", "10-2_SocialGrpSize","24-1_TeatNumber"
, "25-1_WeaningAge_d" , "5-4_WeaningBodyMass_g" , "13-3_WeaningHeadBodyLen_mm","26-1_GR_Area_km2" , "26-2_GR_MaxLat_dd" ,"26-3_GR_MinLat_dd", "26-4_GR_MidRangeLat_dd","26-5_GR_MaxLong_dd"
, "26-6_GR_MinLong_dd", "26-7_GR_MidRangeLong_dd","27-1_HuPopDen_Min_n/km2" , "27-2_HuPopDen_Mean_n/km2", "27-3_HuPopDen_5p_n/km2", "27-4_HuPopDen_Change"
, "28-1_Precip_Mean_mm" , "28-2_Temp_Mean_01degC" ,"30-1_AET_Mean_mm","30-2_PET_Mean_mm","1-1_ActivityCycle",  "6-1_DietBreadth", "12-1_HabitatBreadth", "12-2_Terrestriality", "6-2_TrophicLevel")
# Filter the original data using the selectedTraits vector as the subset
traitData <- rawMammalData[selectedTraits]
# Rename columns
colnames(traitData) <- c("order", "family", "genus", "species_name", "body_mass", "forearm_length", "headbody_length", "eyeopening_age", "firstbirth_age", "bmr_rate", "bmr_mass", "dispersal_age", "gestation_length", "home_range", "home_range_indiv", "interbirth_interval", "litter_size", "litters_pyear", "max_longevity", "neonate_bodymass", "neonate_headbodylength", "pop_density", "pop_grpsize", "sexualmaturity_age", "social_grpsize", "teatnumber", "weaning_age", "weaning_bodymass", "weaning_bodylength", "GR_area", "GR_maxlat", "GR_minlat", "GR_midrangelat", "GR_maxlong", "GR_minlong", "GR_midrangelong", "hupopden_min", "hupopden_mean", "hupopden_5p", "hupopden_change", "precip_mean", "temp_mean", "AET_mean", "PET_mean", "activity_cycle", "diet_breadth", "habitat_breadth", "terrestriality", "trophic_level")
# Changing -999 values to NA
traitData[traitData == -999] <- NA
# Converting to data table
traitData <- as.data.table(traitData)
traitData <- traitData[,!c(1,2,3)]
##### Placental mammal data #####
# Read mammal data
placentalMammalData <- read_excel("placental.xlsx")
# Remove columns that are not needed for analysis
placentalMammalData$refs <- NULL
# Rename columns
colnames(placentalMammalData) <- c("order", "family", "genus", "species", "body_mass", "gestation_length", "neonate_bodymass", "weaning_age", "weaning_bodymass", "firstbirth_age", "max_longevity", "litter_size", "litters_pyear");
# Changing -999 values to NA
placentalMammalData[placentalMammalData == -999] <- NA
# Converting to data table
placentalMammalData <- as.data.table(placentalMammalData)
# Setting species name
placentalMammalData <- unite(placentalMammalData, "species_name", c("genus","species"), sep = " ", remove = FALSE)
# Converting months to days
placentalMammalData <- placentalMammalData[, gestation_length := gestation_length*30]
placentalMammalData <- placentalMammalData[, weaning_age := weaning_age *30]
placentalMammalData <- placentalMammalData[, firstbirth_age := firstbirth_age *30]
# Data table reorganization
placentalMammalData <- placentalMammalData[, !c(1,2,4,5)]
##### Amniote mammal data #####
# Read mammal data
amnioteMammalData <- read.csv("Amniote.csv")
# Filter mammals
amnioteMammalData <- filter(amnioteMammalData, class == "Mammalia")
# Subset columns needed for analysis
amnioteMammalData<- amnioteMammalData[, c(1:5, 9:16, 22, 29, 32, 36)]
# Setting null valuescol
amnioteMammalData[amnioteMammalData == -999] <- NA
# Converting to data table
amnioteMammalData <- as.data.table(amnioteMammalData)
# Setting species name
amnioteMammalData <- unite(amnioteMammalData, "species_name", c("genus","species"), sep = " ", remove = FALSE)
# Rename columns
amnioteMammalData <- rename(amnioteMammalData,  litter_size = litter_or_clutch_size_n, litters_pyear = litters_or_clutches_per_y, body_mass = adult_body_mass_g, max_longevity = maximum_longevity_y, gestation_length = gestation_d, weaning_age = weaning_d, neonate_bodymass = birth_or_hatching_weight_g, weaning_bodymass = weaning_weight_g, interbirth_interval = inter_litter_or_interbirth_interval_y, adult_svl_length = adult_svl_cm, neonate_svl_length = birth_or_hatching_svl_cm, maturity_length = no_sex_maturity_d)
# Convert years to days
amnioteMammalData <- amnioteMammalData[, interbirth_interval := interbirth_interval *365]
# Convert years to months
amnioteMammalData <- amnioteMammalData[, max_longevity := max_longevity *12]
# Data table reorganization
amnioteMammalData <- amnioteMammalData[, !c(1,2,3,5,6)]
##### Anage  mammal data #####
# Filter the original data using the selectedTraits vector as the subset
# Read mammal data
anageMammalData <- read_excel("anage.xlsx")
# Subset columns needed for analysis
anageMammalData<- anageMammalData[, c(4:8, 12, 14:17, 19:21, 26:30)]
# Filter mammals
anageMammalData <- filter(anageMammalData, Class == "Mammalia")
# Rename columns
anageMammalData <- rename(anageMammalData, class = Class, order = Order, family = Family, genus = Genus, species = Species, gestation_length = "Gestation/Incubation (days)", litter_size = "Litter/Clutch size", litters_pyear = "Litters/Clutches per year", interbirth_length =  "Inter-litter/Interbirth interval", neonate_bodymass = "Birth weight (g)" ,  body_mass = "Adult weight (g)", growth_rate = "Growth rate (1/days)", max_longevity = "Maximum longevity (yrs)", imr_pyear = "IMR (per yr)", mrdt = "MRDT (yrs)", metabolic_rate = "Metabolic rate (W)", body_mass = "Body mass (g)", temp_mean = "Temperature (K)")
# Setting species name
anageMammalData <- unite(anageMammalData, "species_name", c("genus","species"), sep = " ", remove = FALSE)
# Converting to data table
anageMammalData <- as.data.table(anageMammalData)
# Convert years to months
anageMammalData <- anageMammalData[, max_longevity := max_longevity *12]
# Data table reorganization
anageMammalData <- anageMammalData[, !c(1,2,3,5,6)]
##### Merging all data ####
mergedSpecies <- merge(dfFiltered, traitData, by = "species_name")
# Single row per species
dfFilteredSingle <- dfFiltered[!duplicated(species_name)][, .(bin_uri, species_name, filtered_bin_size)]
traitBodyMass <- traitData[, c("species_name", "body_mass")]
placentalBodyMass <- placentalMammalData[, c("species_name", "body_mass")]
amnioteBodyMass <- amnioteMammalData[, c("species_name", "body_mass")]
anageBodyMass <- anageMammalData[, c("species_name", "body_mass")]
#
dfBodyMass <- Reduce(function(...) merge(..., all = T, by = "species_name"), list(dfFilteredSingle, traitBodyMass , placentalBodyMass, amnioteBodyMass, anageBodyMass))
View(dfBodyMass)
dfBodyMass<- dfBodyMass[!is.na(bin_uri)]
View(dfBodyMass)
dfBodyMass <- Reduce(function(...) merge(..., all = T, by = "species_name"), list(dfFilteredSingle, traitBodyMass , placentalBodyMass, amnioteBodyMass, anageBodyMass))
dfBodyMass<- dfBodyMass[!is.na(bin_uri)]
missingbm <- dfBodyMass[, apply(.SD, 1, function(x) all(is.na(x))), .SDcols = 4:7]
missingbm <- which(missingbm == TRUE)
dfTraits <-dfTraits[!missingbm]
dfBodyMass <-dfBodyMass[!missingbm]
View(dfBodyMass)
dfTraits <- Reduce(function(...) merge(..., all = T, by = "species_name"), list(dfFilteredSingle, dfLatitudeMedian,dfLatitudeRange, traitData , placentalMammalData, amnioteMammalData, anageMammalData))
View(dfTraits)
dfBodyMass[,lapply(.SDcols = 4:7, mean)]
dfBodyMass$mean=rowMeans(dfBodyMass[,c(4:7)], na.rm=TRUE)
View(dfBodyMass)
