install.packages("swirl")
library("swirl")
swirl()
5+7
x <- 5+7
x
y<-x-3
y
c(1.1, 9, 3.14)
z <-c(1.1, 9, 3.14)
?c
z
c(z, 555,z)
z*2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div<- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2 + 1000
my_div
load("C:/Users/imralpharvin/Desktop/work-s2018/mammals/pantheria/Sec 4 June 15a.RData")
load("C:/Users/imralpharvin/Desktop/work-s2018/mammals/pantheria/Sec 4 June 15a.RData")
setwd("C:/Users/imralpharvin/Desktop/work-s2018/mammals/rscripts")
install.packages("ape")
install.packages("phangorn")
install.packages("seqinr")
install.packages("Biostrings")
library(ape)
library(phangorn)
library(seqinr)
source("https://bioconductor.org/biocLite.R")
biocLite("Biostrings")
mammalDSA <- DNAStringSet(dfCentroidSeqsNO$nucleotides)
?DNAStringSet
library(Biostrings)
mammalDSA <- DNAStringSet(dfCentroidSeqsNO$nucleotides)
write.dna(mammalDSA, "mammals.DNA")
mammals <- read.dna("mammals.dna", format="interleaved")
mammals_phyDat <- phyDat(mammals, type = "DNA", levels = NULL)
mt <- modelTest(mammals)
mt <- modelTest(mammals)
mt <- modelTest(mammals_phyDat)
print(mt)
dm <- dist.ml(mammals_phyDat, model="JC69")
mammals_UPGMA <- upgma(dm)
mammals_NJ  <- NJ(dm)
plot(mammals_UPGMA, main="UPGMA")
plot(mammals_NJ, main = "Neighbor Joining")
fit <- pml(mammals_NJ, mammals_phyDat)
print(fit)
fitJC <- optim.pml(fit, model = "JC", rearrangement = "stochastic")
View(dfTraits)
logLik(fitJC)
bs <- bootstrap.pml(fitJC, bs=100, optNni=TRUE, multicore=TRUE, control = pml.control(trace=0))
bs <- bootstrap.pml(fitJC, bs=100, optNni=TRUE, control = pml.control(trace=0))
plotBS(midpoint(fitJC$tree), bs, p = 50, type="p")
write.tree(bs, file="bootstrap_example.tre")
#install.packages("data.table")
library(data.table)
install.packages("data.table")
#install.packages("data.table")
library(data.table)
# For phylogenetic tree manipulation and analysis:
install.packages("adephylo")
# For phylogenetic tree manipulation and analysis:
#install.packages("adephylo")
library(adephylo)
install.packages("ape")
library(ape)
install.packages("caper")
library(caper)
install.packages("phytools")
library(phytools)
# For statistical analysis/graphs:
install.packages("car")
source("GetTraitInfo.R")
source("TestPhyloSig.R")
source("PGLS.R")
source("MergeAndPGLS.R")
# A phylogenetic tree containing branch length data for your species is required for this section.
# Read in your phylogenetic tree.
mainTree <- read.tree(file = "bootstrap_example.tre")
library(plotly)
install.packages("plotly")
library(plotly)
install.packages("Rmisc")
library(Rmisc)
# A phylogenetic tree containing branch length data for your species is required for this section.
# Read in your phylogenetic tree.
mainTree <- read.tree(file = "bootstrap_example.tre")
#install.packages("data.table")
library(data.table)
# For phylogenetic tree manipulation and analysis:
#install.packages("adephylo")
library(adephylo)
#install.packages("ape")
library(ape)
#install.packages("caper")
library(caper)
#install.packages("phytools")
library(phytools)
# For statistical analysis/graphs:
#install.packages("car")
library(car)
#install.packages("plotly")
library(plotly)
#install.packages("Rmisc")
library(Rmisc)
# For statistical analysis/graphs:
install.packages("car")
# For statistical analysis/graphs:
#install.packages("car")
library(car)
# A phylogenetic tree containing branch length data for your species is required for this section.
# Read in your phylogenetic tree.
mainTree <- read.tree(file = "bootstrap_example.tre")
View(mainTree)
View(mainTree)
mainTree$tip.label <- gsub("_", " ", mainTree$tip.label)
# A phylogenetic tree containing branch length data for your species is required for this section.
# Read in your phylogenetic tree.
mainTree <- read.tree(file = "bootstrap_example.tre")
mainTree <- as.phylo(mainTree)
save.image("C:/Users/imralpharvin/Desktop/work-s2018/mammals/pantheria/Sec 5 June 18a.RData")
load("C:/Users/imralpharvin/Desktop/work-s2018/mammals/pantheria/Sec 4 June 15a.RData")
library(ape)
library(phangorn)
library(seqinr)
library(Biostrings)
?DNAStringSet
>phyDat()
?phyDat
?modelTest
?dist.ml
#Converting data table to DNAStringSet object
mammalDSA <- DNAStringSet(dfCentroidSeqsNO$nucleotides)
#Write dna file for dna string set
write.dna(mammalDSA, "mammals.DNA")
#Read  dna file
mammals <- read.dna("mammals.dna", format="interleaved")
#DNA to phyDAT format
mammals_phyDat <- phyDat(mammals, type = "DNA", levels = NULL)
#Compute pairwise distance
dm <- dist.ml(mammals_phyDat, model="JC69")
?NJ
#NJ tree estimation
mammals_NJ  <- NJ(dm)
#Plot NJ tree
plot(mammals_NJ, main = "Neighbor Joining")
?fit
?pml
#Compute likelihood of phylogeneic tree
fit <- pml(mammals_NJ, mammals_phyDat)
print(fit)
?optim.pml
?logLik
#fitJC <- optim.pml(fit, model = "JC", rearrangement = "stochastic")
logLik(fit)
bs <- bootstrap.pml(fit, bs=100, optNni=TRUE, control = pml.control(trace=0))
?bootstrap.pml
plotBS(midpoint(fit$tree), bs, p = 50, type="p")
?plotBS
?write.tree
?midpoint
?write.tree
?bootstrap.pml
?pml
?bootstrap.pml
?NJ
write.tree(mammals_NJ, file="bootstrap_example.tre")
# A phylogenetic tree containing branch length data for your species is required for this section.
# Read in your phylogenetic tree.
mainTree <- read.tree(file = "bootstrap_example.tre")
mainTree$tip.label <- gsub("_", " ", mainTree$tip.label)
# Root the tree using your chosen outgroup species.
mainTree <- root(mainTree, outgroup = outgroups, resolve.root = T)
# Match mainTree with data subset. This will ensure the tree has only the tips we need for data analysis.
mainTree <- drop.tip(phy = mainTree, tip = mainTree$tip.label[!mainTree$tip.label %in% dfCentroidSeqsWO$species_name])
# A phylogenetic tree containing branch length data for your species is required for this section.
# Read in your phylogenetic tree.
mainTree <- read.tree(file = "bootstrap_example.tre")
mainTree$tip.label <- gsub("_", " ", mainTree$tip.label)
?root
?drop.tip
dfTraits <- dfTraits[match(mainTree$tip.label, dfTraits$species_name), ]
dfTraits[, number_of_nodes := distRoot(mainTree, method = "nNodes")]
View(dfTraits)
View(dfTraits)
load("C:/Users/imralpharvin/Desktop/work-s2018/mammals/pantheria/Sec 4 June 15a.RData")
#Converting data table to DNAStringSet object
mammalDSA <- DNAStringSet(dfCentroidSeqsNO$nucleotides)
#Write dna file for dna string set
write.dna(mammalDSA, "mammals.DNA")
#Read  dna file
mammals <- read.dna("mammals.dna", format="interleaved")
#DNA to phyDAT format
mammals_phyDat <- phyDat(mammals, type = "DNA", levels = NULL)
#Compute pairwise distance
dm <- dist.ml(mammals_phyDat, model="JC69")
#NJ tree estimation
mammals_NJ  <- NJ(dm)
#Plot NJ tree
plot(mammals_NJ, main = "Neighbor Joining")
write.tree(mammals_NJ, file="bootstrap_example.tre")
# A phylogenetic tree containing branch length data for your species is required for this section.
# Read in your phylogenetic tree.
mainTree <- read.tree(file = "bootstrap_example.tre")
View(dfTraits)
mainTree$tip.label <- gsub("_", " ", mainTree$tip.label)
View(mainTree)
View(dfCentroidSeqsWO)
View(dfCentroidSeqsNO)
?gsub
View(mammals_NJ)
View(dfTraits)
View(mainTree)
# A phylogenetic tree containing branch length data for your species is required for this section.
# Read in your phylogenetic tree.
mainTree <- read.tree(file = "final_wholeFishTree.tree")
# A phylogenetic tree containing branch length data for your species is required for this section.
# Read in your phylogenetic tree.
mainTree <- read.tree(file = "bootstrap_example.tre")
View(dfTraits)
dfTraits2 <- dfTraits[match(mainTree$tip.label, dfTraits$species_name), ]
View(dfTraits2)
View(dfCentroidSeqsNO)
# Root the tree using your chosen outgroup species.
# Match mainTree with data subset. This will ensure the tree has only the tips we need for data analysis.
mainTree <- drop.tip(phy = mainTree, tip = mainTree$tip.label[!mainTree$tip.label %in% dfCentroidSeqsNO$species_name])
